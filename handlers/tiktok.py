import os
import shutil
import random
from yt_dlp import YoutubeDL
from telegram import Update
from telegram.ext import ContextTypes
from datetime import time, datetime

# –í—Ä–µ–º—è –Ω–∞—á–∞–ª–∞ –∏ –æ–∫–æ–Ω—á–∞–Ω–∏—è —Ä–∞–±–æ—Ç—ã (8:00 - 22:00)
START_TIME = time(8, 0)
END_TIME = time(23, 0)

# –°–ø–∏—Å–æ–∫ –∫–∞–Ω–∞–ª–æ–≤ TikTok
TIKTOK_CHANNELS = [
    "https://www.tiktok.com/@alexanderyur7",
    # –î–æ–±–∞–≤—å—Ç–µ –¥—Ä—É–≥–∏–µ –∫–∞–Ω–∞–ª—ã –∑–¥–µ—Å—å
]

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —á—Ç–µ–Ω–∏—è –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –∏–Ω–¥–µ–∫—Å–∞
def read_last_index():
    try:
        with open("last_index.txt", "r") as file:
            return int(file.read().strip())
    except (FileNotFoundError, ValueError):
        return 0  # –ï—Å–ª–∏ —Ñ–∞–π–ª–∞ –Ω–µ—Ç –∏–ª–∏ –æ–Ω –ø—É—Å—Ç, –Ω–∞—á–∏–Ω–∞–µ–º —Å –ø–µ—Ä–≤–æ–≥–æ –≤–∏–¥–µ–æ

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –∏–Ω–¥–µ–∫—Å–∞
def update_last_index(index):
    with open("last_index.txt", "w") as file:
        file.write(str(index))

async def tiktok_handler(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /mem. –ó–∞–ø—É—Å–∫–∞–µ—Ç –ø–µ—Ä–∏–æ–¥–∏—á–µ—Å–∫—É—é –∑–∞–¥–∞—á—É –¥–ª—è –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ –≤–∏–¥–µ–æ –∏–∑ TikTok.
    """
    # –£–¥–∞–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–æ–º–∞–Ω–¥–æ–π –∏–∑ —á–∞—Ç–∞
    await context.bot.delete_message(chat_id=update.message.chat_id, message_id=update.message.message_id)
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º –∑–∞–¥–∞—á—É
    job = context.job_queue.run_repeating(
        post_tiktok_video,  # –§—É–Ω–∫—Ü–∏—è, –∫–æ—Ç–æ—Ä–∞—è –±—É–¥–µ—Ç –≤—ã–ø–æ–ª–Ω—è—Ç—å—Å—è
        interval=10000,  # –ò–Ω—Ç–µ—Ä–≤–∞–ª –≤ —Å–µ–∫—É–Ω–¥–∞—Ö (20 —Å–µ–∫—É–Ω–¥)
        first=0.1,  # –ó–∞–¥–µ—Ä–∂–∫–∞ –ø–µ—Ä–µ–¥ –ø–µ—Ä–≤—ã–º –∑–∞–ø—É—Å–∫–æ–º (0.1 —Å–µ–∫—É–Ω–¥—ã)
        chat_id=update.message.chat_id,  # ID —á–∞—Ç–∞
    )
    context.chat_data['tiktok_job'] = job  # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∑–∞–¥–∞—á—É –≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ
    print("–ü—É–±–ª–∏–∫–∞—Ü–∏—è –≤–∏–¥–µ–æ –∏–∑ TikTok –Ω–∞—á–∞—Ç–∞!")

async def stop_tiktok_handler(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –ø–µ—Ä–∏–æ–¥–∏—á–µ—Å–∫–æ–π –∑–∞–¥–∞—á–∏.
    """
    # –£–¥–∞–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–æ–º–∞–Ω–¥–æ–π –∏–∑ —á–∞—Ç–∞
    await context.bot.delete_message(chat_id=update.message.chat_id, message_id=update.message.message_id)
    
    if 'tiktok_job' in context.chat_data:
        job = context.chat_data['tiktok_job']
        job.schedule_removal()  # –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–∞–¥–∞—á—É
        del context.chat_data['tiktok_job']  # –£–¥–∞–ª—è–µ–º –∑–∞–¥–∞—á—É –∏–∑ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞
        print("–ü—É–±–ª–∏–∫–∞—Ü–∏—è –≤–∏–¥–µ–æ –∏–∑ TikTok –ø—Ä–∏–æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞.")
    else:
        print("–ù–µ—Ç –∞–∫—Ç–∏–≤–Ω–æ–π –∑–∞–¥–∞—á–∏ –¥–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏.")

async def post_tiktok_video(context: ContextTypes.DEFAULT_TYPE):
    """
    –ü–µ—Ä–∏–æ–¥–∏—á–µ—Å–∫–∞—è –∑–∞–¥–∞—á–∞ –¥–ª—è –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ –≤–∏–¥–µ–æ –∏–∑ TikTok.
    """
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–µ–∫—É—â–µ–µ –≤—Ä–µ–º—è
    now = datetime.now().time()
    if not (START_TIME <= now <= END_TIME):
        print("–í—Ä–µ–º—è –æ—Ç–¥–æ—Ö–Ω—É—Ç—å –æ—Ç –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ –≤–∏–¥–µ–æ! –°–ø–æ–∫–æ–π–Ω–æ–π –Ω–æ—á–∏!")
        return

    # –ü–µ—Ä–µ–º–µ—à–∏–≤–∞–µ–º —Å–ø–∏—Å–æ–∫ –∫–∞–Ω–∞–ª–æ–≤ –¥–ª—è —Å–ª—É—á–∞–π–Ω–æ–≥–æ –ø–æ—Ä—è–¥–∫–∞
    random.shuffle(TIKTOK_CHANNELS)

    # –ü–µ—Ä–µ–±–∏—Ä–∞–µ–º –∫–∞–Ω–∞–ª—ã, –ø–æ–∫–∞ –Ω–µ –Ω–∞–π–¥–µ–º –Ω–æ–≤–æ–µ –≤–∏–¥–µ–æ
    for channel_url in TIKTOK_CHANNELS:
        print(f"–ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–∞–Ω–∞–ª: {channel_url}")

        # –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –≤–∏–¥–µ–æ —Å –∫–∞–Ω–∞–ª–∞
        video_urls = await get_tiktok_video_urls(channel_url)

        if video_urls:
            # –ß–∏—Ç–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–π –∏–Ω–¥–µ–∫—Å –∏–∑ —Ñ–∞–π–ª–∞
            last_index = read_last_index()

            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –µ—â–µ –≤–∏–¥–µ–æ –¥–ª—è –ø—É–±–ª–∏–∫–∞—Ü–∏–∏
            if last_index >= len(video_urls):
                print("–í—Å–µ –≤–∏–¥–µ–æ –Ω–∞ –∫–∞–Ω–∞–ª–µ —É–∂–µ –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω—ã.")
                continue

            # –ü–æ–ª—É—á–∞–µ–º —Å–ª–µ–¥—É—é—â–µ–µ –≤–∏–¥–µ–æ –¥–ª—è –ø—É–±–ª–∏–∫–∞—Ü–∏–∏
            video_url = video_urls[last_index]

            # –°–∫–∞—á–∏–≤–∞–µ–º –≤–∏–¥–µ–æ
            downloaded_video_path = await download_tiktok_video(video_url)

            if downloaded_video_path:
                try:
                    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤–∏–¥–µ–æ –≤ —á–∞—Ç
                    with open(downloaded_video_path, 'rb') as video_file:
                        await context.bot.send_video(
                            chat_id=context.job.chat_id,  # ID —á–∞—Ç–∞
                            video=video_file,  # –í–∏–¥–µ–æ—Ñ–∞–π–ª
                            caption="üé¨ –ù–æ–≤—ã–π –ø—Ä–∏–∫–æ–ª! ü§£ –°–º–æ—Ç—Ä–∏ üëâ @moldovabolgaria \n#–í–∏—Ä—É—Å–Ω–æ–µ–í–∏–¥–µ–æ #–Æ–º–æ—Ä #–¢—Ä–µ–Ω–¥—ã"  # –û–ø—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–π –∑–∞–≥–æ–ª–æ–≤–æ–∫
                        )
                    # –û–±–Ω–æ–≤–ª—è–µ–º –∏–Ω–¥–µ–∫—Å –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω–Ω–æ–≥–æ –≤–∏–¥–µ–æ
                    update_last_index(last_index + 1)
                    print(f"–í–∏–¥–µ–æ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ: {downloaded_video_path}")
                except Exception as e:
                    print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –≤–∏–¥–µ–æ: {e}")
                finally:
                    # –£–¥–∞–ª—è–µ–º –≤–∏–¥–µ–æ –ø–æ—Å–ª–µ –æ—Ç–ø—Ä–∞–≤–∫–∏ (–∏–ª–∏ –≤ —Å–ª—É—á–∞–µ –æ—à–∏–±–∫–∏)
                    if os.path.exists(downloaded_video_path):
                        try:
                            os.remove(downloaded_video_path)
                            print(f"–í–∏–¥–µ–æ —É–¥–∞–ª–µ–Ω–æ: {downloaded_video_path}")
                        except PermissionError:
                            print(f"–ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å —Ñ–∞–π–ª: {downloaded_video_path}. –§–∞–π–ª –≤—Å—ë –µ—â—ë –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è.")

                    # –£–¥–∞–ª—è–µ–º –ø–∞–ø–∫—É downloads, –µ—Å–ª–∏ –æ–Ω–∞ –ø—É—Å—Ç–∞
                    output_dir = os.path.dirname(downloaded_video_path)
                    if os.path.exists(output_dir) and not os.listdir(output_dir):
                        try:
                            shutil.rmtree(output_dir)
                            print(f"–ü–∞–ø–∫–∞ —É–¥–∞–ª–µ–Ω–∞: {output_dir}")
                        except Exception as e:
                            print(f"–ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å –ø–∞–ø–∫—É: {e}")
            else:
                print("–ù–µ —É–¥–∞–ª–æ—Å—å —Å–∫–∞—á–∞—Ç—å –≤–∏–¥–µ–æ –∏–∑ TikTok.")
        else:
            print("–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ –≤–∏–¥–µ–æ.")
    else:
        print("–ù–µ—Ç –Ω–æ–≤—ã—Ö –≤–∏–¥–µ–æ –Ω–∞ –≤—Å–µ—Ö –∫–∞–Ω–∞–ª–∞—Ö.")

async def get_tiktok_video_urls(channel_url):
    """
    –ü–æ–ª—É—á–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –≤–∏–¥–µ–æ —Å –∫–∞–Ω–∞–ª–∞ TikTok.
    
    :param channel_url: –°—Å—ã–ª–∫–∞ –Ω–∞ –∫–∞–Ω–∞–ª TikTok.
    :return: –°–ø–∏—Å–æ–∫ —Å—Å—ã–ª–æ–∫ –Ω–∞ –≤–∏–¥–µ–æ –∏–ª–∏ None –≤ —Å–ª—É—á–∞–µ –æ—à–∏–±–∫–∏.
    """
    try:
        # –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–ª—è yt-dlp
        ydl_opts = {
            'quiet': True,  # –û—Ç–∫–ª—é—á–∞–µ–º –ª–∏—à–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è
            'extract_flat': True,  # –ò–∑–≤–ª–µ–∫–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –±–µ–∑ —Å–∫–∞—á–∏–≤–∞–Ω–∏—è
        }

        # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∫–∞–Ω–∞–ª–µ
        with YoutubeDL(ydl_opts) as ydl:
            info_dict = ydl.extract_info(channel_url, download=False)
            if 'entries' in info_dict:  # –ï—Å–ª–∏ —ç—Ç–æ –∫–∞–Ω–∞–ª —Å –Ω–µ—Å–∫–æ–ª—å–∫–∏–º–∏ –≤–∏–¥–µ–æ
                video_urls = [entry['url'] for entry in info_dict['entries']]
                return video_urls
            else:
                return []  # –ï—Å–ª–∏ –≤–∏–¥–µ–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å–ø–∏—Å–∫–∞ –≤–∏–¥–µ–æ: {e}")
        return None

async def download_tiktok_video(video_url, output_dir="downloads"):
    """
    –°–∫–∞—á–∏–≤–∞–µ—Ç –≤–∏–¥–µ–æ —Å TikTok –ø–æ —Å—Å—ã–ª–∫–µ –∏ —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç –µ–≥–æ –≤ —É–∫–∞–∑–∞–Ω–Ω—É—é –ø–∞–ø–∫—É.
    
    :param video_url: –°—Å—ã–ª–∫–∞ –Ω–∞ –≤–∏–¥–µ–æ TikTok.
    :param output_dir: –ü–∞–ø–∫–∞ –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –≤–∏–¥–µ–æ (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é "downloads").
    :return: –ü—É—Ç—å –∫ —Å–∫–∞—á–∞–Ω–Ω–æ–º—É –≤–∏–¥–µ–æ –∏–ª–∏ None –≤ —Å–ª—É—á–∞–µ –æ—à–∏–±–∫–∏.
    """
    try:
        # –°–æ–∑–¥–∞–µ–º –ø–∞–ø–∫—É, –µ—Å–ª–∏ –æ–Ω–∞ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
        if not os.path.exists(output_dir):
            os.makedirs(output_dir)

        # –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–ª—è yt-dlp
        ydl_opts = {
            'format': 'best',  # –°–∫–∞—á–∏–≤–∞–µ–º –ª—É—á—à–µ–µ –∫–∞—á–µ—Å—Ç–≤–æ
            'outtmpl': os.path.join(output_dir, '%(title)s.%(ext)s'),  # –ü—É—Ç—å –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è
            'quiet': True,  # –û—Ç–∫–ª—é—á–∞–µ–º –ª–∏—à–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è
        }

        # –°–∫–∞—á–∏–≤–∞–µ–º –≤–∏–¥–µ–æ
        with YoutubeDL(ydl_opts) as ydl:
            info_dict = ydl.extract_info(video_url, download=True)
            video_path = ydl.prepare_filename(info_dict)  # –ü–æ–ª—É—á–∞–µ–º –ø—É—Ç—å –∫ —Å–∫–∞—á–∞–Ω–Ω–æ–º—É —Ñ–∞–π–ª—É
            return video_path

    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–∫–∞—á–∏–≤–∞–Ω–∏–∏ –≤–∏–¥–µ–æ: {e}")
        return None